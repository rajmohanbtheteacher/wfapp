name: Deploy to Self-Hosted EC2 Runner & SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CONTAINER_NAME: "weather-forecast-container"
  DOCKER_IMAGE_NAME: "weather-forecast-app"
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  deploy-to-ec2:
    name: Deploy Docker Container on Self-Hosted EC2 Runner
    runs-on: self-hosted  # Run directly on the EC2 instance

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t $DOCKER_IMAGE_NAME .

      - name: Stop & Remove Existing Container (if running)
        run: |
          CONTAINER_ID=$(docker ps -aq -f name=$CONTAINER_NAME)
          if [ ! -z "$CONTAINER_ID" ]; then
            echo "Stopping and removing existing container..."
            docker stop $CONTAINER_ID
            docker rm $CONTAINER_ID
          else
            echo "No existing container found."
          fi

      - name: Run New Docker Container
        run: |
          docker run -d -p 80:3000 --name $CONTAINER_NAME $DOCKER_IMAGE_NAME

  sonar-analysis:
    name: SonarQube Code Analysis
    runs-on: self-hosted  # Run on the EC2 instance

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run SonarQube Analysis
        run: |
          docker run --rm --network host sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=weather-forecast-app \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
